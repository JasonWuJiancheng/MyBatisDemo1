<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
<!-- 加载属性文件 -->
	<properties resource="db.properties">
		<!-- properties标签中还可以配置属性名和属性值 -->
		<!-- <property name="" value=""/> -->
	</properties>
<!-- 别名定义 -->
	<typeAliases>
		<!-- 针对单个别名定义
		type:类型路径 alias:别名
		 -->
		<!-- <typeAlias type="com.mybatis.pojo.User" alias="user"/> -->
		
		<!-- 批量别名定义
		指定包名，mybatis自动扫描pojo类，自动定义别名，别名就是类名（首字母不区分大小写）
		 -->
		<package name="com.mybatis.pojo"/>
	</typeAliases>
<!-- 和spring整合后 environments将废除 -->
    <environments default="development">
        <environment id="development">
        <!-- 使用JDBC事务管理，事务控制由mybatis -->
            <transactionManager type="JDBC"/>
            <!-- 数据库连接池，由mybatis管理 -->
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>
    <!-- 加载映射文件 -->
    <mappers>
    	<!-- 通过resource加载单个映射文件 -->
    	<mapper resource="sqlmap/User.xml"/>
    	
    	<!-- 通过mapper接口加载单个映射文件
    	前提：使用mapper代理的方法
    	遵循规范：需要将mapper接口类名誉mapper.xml映射文件名保持一致，且在一个目录中 -->
    	<!-- <mapper class="com.mybatis.mapper.UserMapper"/> -->
    	
    	<!-- 通过package批量加载mapper
    	也要遵循上方规范 -->
    	<package name="com.mybatis.mapper"/>
    </mappers>
    
</configuration>